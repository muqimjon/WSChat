# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
      
  dockerize:
    name: Dockerize
    needs: build
    runs-on: ubuntu-latest
    env:
      USERNAME: ${{ secrets.DOCKER_USERNAME }}
      PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      PROJECT: ${{ secrets.PROJECT }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
      - name: Build Docker image
        run: docker build -t $USERNAME/$PROJECT -f .\src\backend\WSChat.WebApi\Dockerfile .
      - name: Login to Docker account
        run: docker login -u $USERNAME -p $PASSWORD
      - name: Push Docker image
        run: docker push $USERNAME/$PROJECT

  deploy:
    name: Deploy
    needs: dockerize
    runs-on: ubuntu-latest
  
    steps:
      - name: SSH into AWS Ubuntu Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/app
            docker-compose pull
            docker rmi $(docker images --quiet --filter dangling=true)
            docker-compose up --detach